//
//  h_thread.c
//  TelServer
//
//  Created by fwc on 2018/5/25.
//  Copyright © 2018年 fwc. All rights reserved.
//

#include "h_thread.h"

unsigned char run = 0;
List *list;

pthread_t accept_pid;
pthread_t read_pid;
pthread_t handle_pid;
pthread_t auth_pid;
pthread_t heart_pid;
unsigned char is_run(void)
{
    return run;
}


void* accept_client_1(void *args)
{
	return NULL;
}

void start_thread(int sockfd)
{
    int ret = 0;
  	pthread_t pid;
    run = 1;

    list = init_list(BACK_COUNT);
    
   ret = pthread_create(&pid, NULL, accept_client, NULL);
    
    if(ret == -1)
    {
        printf("start accept fail errno = %d",errno);
        return;
    }
    
    //ret = pthread_create(&read_pid, NULL, read_client, (void *)NULL);
    
    if(ret == -1)
    {
        printf("start read fail errno = %d",errno);
        return;
    }
    
    //ret = pthread_create(&handle_pid, NULL, handle_msg, (void *)NULL);
    
    if(ret == -1)
    {
        printf("start handle fail errno = %d",errno);
        return;
    }
    
   // ret = pthread_create(&auth_pid, NULL, run_auth_client, (void *)NULL);
    
    if(ret == -1)
    {
        printf("start run_auth_client fail errno = %d",errno);
        return;
    }
    
    //ret = pthread_create(&heart_pid, NULL, run_heartbeat_client, (void *)NULL);
    
    if(ret == -1)
    {
        printf("start run_heartbeat_client fail errno = %d",errno);
        return;
    }
    
}

void stop_thread(void)
{
    run = 0;
}

